#!/usr/bin/env python

import argparse
import sys

from sqlalchemy import create_engine

from meteo.models import bbd, cr6, jro, lbh, kla

SCHEMAS = {
    "cr6": {
        "base": cr6.Base,
    },
    "bbd": {
        "base": bbd.Base,
    },
    "jro": {
        "base": jro.Base,
    },
    "lbh": {
        "base": lbh.Base,
    },
    "kla": {
        "base": kla.Base,
    },
}


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("url", help="SQLAlchemy engine url.")
    parser.add_argument("model", help="Model name to create.")
    return parser.parse_args()


def main():
    args = parse_args()
    if args.model not in SCHEMAS:
        sys.exit("Model name {} is not supported.".format(args.model))

    base_class = SCHEMAS[args.model]["base"]
    engine = create_engine(args.url)
    base_class.prepare(engine, reflect=True)
    base_class.metadata.create_all(engine)


if __name__ == "__main__":
    main()
